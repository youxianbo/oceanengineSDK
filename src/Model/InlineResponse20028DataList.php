<?php
/**
 * InlineResponse20028DataList
 *
 * PHP version 5
 *
 * @category Class
 * @package  Oceanengine\Open
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 巨量开放接口
 *
 * 根据项目需求完成的接口，非所有接口都有相应的代码
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Oceanengine\Open\Model;

use \ArrayAccess;
use \Oceanengine\Open\ObjectSerializer;

/**
 * InlineResponse20028DataList Class Doc Comment
 *
 * @category Class
 * @package  Oceanengine\Open
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InlineResponse20028DataList implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_28_data_list';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'business_page_operation_type' => 'string',
        'room_id' => 'Null',
        'budget' => 'int',
        'video_img' => 'Null',
        'video_id' => 'Null',
        'ad_id' => 'Null',
        'room_cover' => 'Null',
        'room_title' => 'Null',
        'create_time' => 'string',
        'advertiser_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'business_page_operation_type' => null,
        'room_id' => null,
        'budget' => 'int32',
        'video_img' => null,
        'video_id' => null,
        'ad_id' => null,
        'room_cover' => null,
        'room_title' => null,
        'create_time' => null,
        'advertiser_id' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'business_page_operation_type' => 'business_page_operation_type',
        'room_id' => 'room_id',
        'budget' => 'budget',
        'video_img' => 'video_img',
        'video_id' => 'video_id',
        'ad_id' => 'ad_id',
        'room_cover' => 'room_cover',
        'room_title' => 'room_title',
        'create_time' => 'create_time',
        'advertiser_id' => 'advertiser_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'business_page_operation_type' => 'setBusinessPageOperationType',
        'room_id' => 'setRoomId',
        'budget' => 'setBudget',
        'video_img' => 'setVideoImg',
        'video_id' => 'setVideoId',
        'ad_id' => 'setAdId',
        'room_cover' => 'setRoomCover',
        'room_title' => 'setRoomTitle',
        'create_time' => 'setCreateTime',
        'advertiser_id' => 'setAdvertiserId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'business_page_operation_type' => 'getBusinessPageOperationType',
        'room_id' => 'getRoomId',
        'budget' => 'getBudget',
        'video_img' => 'getVideoImg',
        'video_id' => 'getVideoId',
        'ad_id' => 'getAdId',
        'room_cover' => 'getRoomCover',
        'room_title' => 'getRoomTitle',
        'create_time' => 'getCreateTime',
        'advertiser_id' => 'getAdvertiserId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['business_page_operation_type'] = isset($data['business_page_operation_type']) ? $data['business_page_operation_type'] : null;
        $this->container['room_id'] = isset($data['room_id']) ? $data['room_id'] : null;
        $this->container['budget'] = isset($data['budget']) ? $data['budget'] : null;
        $this->container['video_img'] = isset($data['video_img']) ? $data['video_img'] : null;
        $this->container['video_id'] = isset($data['video_id']) ? $data['video_id'] : null;
        $this->container['ad_id'] = isset($data['ad_id']) ? $data['ad_id'] : null;
        $this->container['room_cover'] = isset($data['room_cover']) ? $data['room_cover'] : null;
        $this->container['room_title'] = isset($data['room_title']) ? $data['room_title'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['advertiser_id'] = isset($data['advertiser_id']) ? $data['advertiser_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets business_page_operation_type
     *
     * @return string|null
     */
    public function getBusinessPageOperationType()
    {
        return $this->container['business_page_operation_type'];
    }

    /**
     * Sets business_page_operation_type
     *
     * @param string|null $business_page_operation_type business_page_operation_type
     *
     * @return $this
     */
    public function setBusinessPageOperationType($business_page_operation_type)
    {
        $this->container['business_page_operation_type'] = $business_page_operation_type;

        return $this;
    }

    /**
     * Gets room_id
     *
     * @return Null|null
     */
    public function getRoomId()
    {
        return $this->container['room_id'];
    }

    /**
     * Sets room_id
     *
     * @param Null|null $room_id room_id
     *
     * @return $this
     */
    public function setRoomId($room_id)
    {
        $this->container['room_id'] = $room_id;

        return $this;
    }

    /**
     * Gets budget
     *
     * @return int|null
     */
    public function getBudget()
    {
        return $this->container['budget'];
    }

    /**
     * Sets budget
     *
     * @param int|null $budget budget
     *
     * @return $this
     */
    public function setBudget($budget)
    {
        $this->container['budget'] = $budget;

        return $this;
    }

    /**
     * Gets video_img
     *
     * @return Null|null
     */
    public function getVideoImg()
    {
        return $this->container['video_img'];
    }

    /**
     * Sets video_img
     *
     * @param Null|null $video_img video_img
     *
     * @return $this
     */
    public function setVideoImg($video_img)
    {
        $this->container['video_img'] = $video_img;

        return $this;
    }

    /**
     * Gets video_id
     *
     * @return Null|null
     */
    public function getVideoId()
    {
        return $this->container['video_id'];
    }

    /**
     * Sets video_id
     *
     * @param Null|null $video_id video_id
     *
     * @return $this
     */
    public function setVideoId($video_id)
    {
        $this->container['video_id'] = $video_id;

        return $this;
    }

    /**
     * Gets ad_id
     *
     * @return Null|null
     */
    public function getAdId()
    {
        return $this->container['ad_id'];
    }

    /**
     * Sets ad_id
     *
     * @param Null|null $ad_id ad_id
     *
     * @return $this
     */
    public function setAdId($ad_id)
    {
        $this->container['ad_id'] = $ad_id;

        return $this;
    }

    /**
     * Gets room_cover
     *
     * @return Null|null
     */
    public function getRoomCover()
    {
        return $this->container['room_cover'];
    }

    /**
     * Sets room_cover
     *
     * @param Null|null $room_cover room_cover
     *
     * @return $this
     */
    public function setRoomCover($room_cover)
    {
        $this->container['room_cover'] = $room_cover;

        return $this;
    }

    /**
     * Gets room_title
     *
     * @return Null|null
     */
    public function getRoomTitle()
    {
        return $this->container['room_title'];
    }

    /**
     * Sets room_title
     *
     * @param Null|null $room_title room_title
     *
     * @return $this
     */
    public function setRoomTitle($room_title)
    {
        $this->container['room_title'] = $room_title;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string|null
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string|null $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets advertiser_id
     *
     * @return int|null
     */
    public function getAdvertiserId()
    {
        return $this->container['advertiser_id'];
    }

    /**
     * Sets advertiser_id
     *
     * @param int|null $advertiser_id advertiser_id
     *
     * @return $this
     */
    public function setAdvertiserId($advertiser_id)
    {
        $this->container['advertiser_id'] = $advertiser_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


