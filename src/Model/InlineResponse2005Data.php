<?php
/**
 * InlineResponse2005Data
 *
 * PHP version 5
 *
 * @category Class
 * @package  Oceanengine\Open
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 巨量开放接口
 *
 * 根据项目需求完成的接口，非所有接口都有相应的代码
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Oceanengine\Open\Model;

use \ArrayAccess;
use \Oceanengine\Open\ObjectSerializer;

/**
 * InlineResponse2005Data Class Doc Comment
 *
 * @category Class
 * @package  Oceanengine\Open
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InlineResponse2005Data implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_5_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name' => 'string',
        'role' => 'int',
        'promotion_area' => 'string',
        'brand' => 'string',
        'address' => 'string',
        'license_city' => 'string',
        'promotion_center_city' => 'string',
        'promotion_center_province' => 'string',
        'first_industry_name' => 'string',
        'second_industry_name' => 'string',
        'license_no' => 'string',
        'license_url' => 'string',
        'license_province' => 'string',
        'company' => 'string',
        'status' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => 'int32',
        'name' => null,
        'role' => 'int32',
        'promotion_area' => null,
        'brand' => null,
        'address' => null,
        'license_city' => null,
        'promotion_center_city' => null,
        'promotion_center_province' => null,
        'first_industry_name' => null,
        'second_industry_name' => null,
        'license_no' => null,
        'license_url' => null,
        'license_province' => null,
        'company' => null,
        'status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'role' => 'role',
        'promotion_area' => 'promotion_area',
        'brand' => 'brand',
        'address' => 'address',
        'license_city' => 'license_city',
        'promotion_center_city' => 'promotion_center_city',
        'promotion_center_province' => 'promotion_center_province',
        'first_industry_name' => 'first_industry_name',
        'second_industry_name' => 'second_industry_name',
        'license_no' => 'license_no',
        'license_url' => 'license_url',
        'license_province' => 'license_province',
        'company' => 'company',
        'status' => 'status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'role' => 'setRole',
        'promotion_area' => 'setPromotionArea',
        'brand' => 'setBrand',
        'address' => 'setAddress',
        'license_city' => 'setLicenseCity',
        'promotion_center_city' => 'setPromotionCenterCity',
        'promotion_center_province' => 'setPromotionCenterProvince',
        'first_industry_name' => 'setFirstIndustryName',
        'second_industry_name' => 'setSecondIndustryName',
        'license_no' => 'setLicenseNo',
        'license_url' => 'setLicenseUrl',
        'license_province' => 'setLicenseProvince',
        'company' => 'setCompany',
        'status' => 'setStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'role' => 'getRole',
        'promotion_area' => 'getPromotionArea',
        'brand' => 'getBrand',
        'address' => 'getAddress',
        'license_city' => 'getLicenseCity',
        'promotion_center_city' => 'getPromotionCenterCity',
        'promotion_center_province' => 'getPromotionCenterProvince',
        'first_industry_name' => 'getFirstIndustryName',
        'second_industry_name' => 'getSecondIndustryName',
        'license_no' => 'getLicenseNo',
        'license_url' => 'getLicenseUrl',
        'license_province' => 'getLicenseProvince',
        'company' => 'getCompany',
        'status' => 'getStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['role'] = isset($data['role']) ? $data['role'] : null;
        $this->container['promotion_area'] = isset($data['promotion_area']) ? $data['promotion_area'] : null;
        $this->container['brand'] = isset($data['brand']) ? $data['brand'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['license_city'] = isset($data['license_city']) ? $data['license_city'] : null;
        $this->container['promotion_center_city'] = isset($data['promotion_center_city']) ? $data['promotion_center_city'] : null;
        $this->container['promotion_center_province'] = isset($data['promotion_center_province']) ? $data['promotion_center_province'] : null;
        $this->container['first_industry_name'] = isset($data['first_industry_name']) ? $data['first_industry_name'] : null;
        $this->container['second_industry_name'] = isset($data['second_industry_name']) ? $data['second_industry_name'] : null;
        $this->container['license_no'] = isset($data['license_no']) ? $data['license_no'] : null;
        $this->container['license_url'] = isset($data['license_url']) ? $data['license_url'] : null;
        $this->container['license_province'] = isset($data['license_province']) ? $data['license_province'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['second_industry_name'] === null) {
            $invalidProperties[] = "'second_industry_name' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id 广告主ID
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name 账户名
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets role
     *
     * @return int|null
     */
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param int|null $role 角色, 详见【附录-广告主角色】
     *
     * @return $this
     */
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets promotion_area
     *
     * @return string|null
     */
    public function getPromotionArea()
    {
        return $this->container['promotion_area'];
    }

    /**
     * Sets promotion_area
     *
     * @param string|null $promotion_area 运营区域
     *
     * @return $this
     */
    public function setPromotionArea($promotion_area)
    {
        $this->container['promotion_area'] = $promotion_area;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string|null
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string|null $brand 经营类别
     *
     * @return $this
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address 地址
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets license_city
     *
     * @return string|null
     */
    public function getLicenseCity()
    {
        return $this->container['license_city'];
    }

    /**
     * Sets license_city
     *
     * @param string|null $license_city 执照城市
     *
     * @return $this
     */
    public function setLicenseCity($license_city)
    {
        $this->container['license_city'] = $license_city;

        return $this;
    }

    /**
     * Gets promotion_center_city
     *
     * @return string|null
     */
    public function getPromotionCenterCity()
    {
        return $this->container['promotion_center_city'];
    }

    /**
     * Sets promotion_center_city
     *
     * @param string|null $promotion_center_city 运营城市
     *
     * @return $this
     */
    public function setPromotionCenterCity($promotion_center_city)
    {
        $this->container['promotion_center_city'] = $promotion_center_city;

        return $this;
    }

    /**
     * Gets promotion_center_province
     *
     * @return string|null
     */
    public function getPromotionCenterProvince()
    {
        return $this->container['promotion_center_province'];
    }

    /**
     * Sets promotion_center_province
     *
     * @param string|null $promotion_center_province 运营省份
     *
     * @return $this
     */
    public function setPromotionCenterProvince($promotion_center_province)
    {
        $this->container['promotion_center_province'] = $promotion_center_province;

        return $this;
    }

    /**
     * Gets first_industry_name
     *
     * @return string|null
     */
    public function getFirstIndustryName()
    {
        return $this->container['first_industry_name'];
    }

    /**
     * Sets first_industry_name
     *
     * @param string|null $first_industry_name 一级行业名称（新版）
     *
     * @return $this
     */
    public function setFirstIndustryName($first_industry_name)
    {
        $this->container['first_industry_name'] = $first_industry_name;

        return $this;
    }

    /**
     * Gets second_industry_name
     *
     * @return string
     */
    public function getSecondIndustryName()
    {
        return $this->container['second_industry_name'];
    }

    /**
     * Sets second_industry_name
     *
     * @param string $second_industry_name 二级行业名称（新版）
     *
     * @return $this
     */
    public function setSecondIndustryName($second_industry_name)
    {
        $this->container['second_industry_name'] = $second_industry_name;

        return $this;
    }

    /**
     * Gets license_no
     *
     * @return string|null
     */
    public function getLicenseNo()
    {
        return $this->container['license_no'];
    }

    /**
     * Sets license_no
     *
     * @param string|null $license_no 执照编号
     *
     * @return $this
     */
    public function setLicenseNo($license_no)
    {
        $this->container['license_no'] = $license_no;

        return $this;
    }

    /**
     * Gets license_url
     *
     * @return string|null
     */
    public function getLicenseUrl()
    {
        return $this->container['license_url'];
    }

    /**
     * Sets license_url
     *
     * @param string|null $license_url 执照预览地址(链接默认1小时内有效)
     *
     * @return $this
     */
    public function setLicenseUrl($license_url)
    {
        $this->container['license_url'] = $license_url;

        return $this;
    }

    /**
     * Gets license_province
     *
     * @return string|null
     */
    public function getLicenseProvince()
    {
        return $this->container['license_province'];
    }

    /**
     * Sets license_province
     *
     * @param string|null $license_province 执照省份
     *
     * @return $this
     */
    public function setLicenseProvince($license_province)
    {
        $this->container['license_province'] = $license_province;

        return $this;
    }

    /**
     * Gets company
     *
     * @return string|null
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param string|null $company 公司名
     *
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status 状态,详见【附录-广告主状态】
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


