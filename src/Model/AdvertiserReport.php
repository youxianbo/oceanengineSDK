<?php
/**
 * AdvertiserReport
 *
 * PHP version 5
 *
 * @category Class
 * @package  Oceanengine\Open
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 巨量开放接口
 *
 * 根据项目需求完成的接口，非所有接口都有相应的代码
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Oceanengine\Open\Model;

use \ArrayAccess;
use \Oceanengine\Open\ObjectSerializer;

/**
 * AdvertiserReport Class Doc Comment
 *
 * @category Class
 * @package  Oceanengine\Open
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AdvertiserReport implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'advertiserReport';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'advertiser_id' => 'int',
        'stat_datetime' => 'string',
        'cost' => 'float',
        'show' => 'string',
        'avg_show_cost' => 'string',
        'click' => 'string',
        'avg_click_cost' => 'string',
        'ctr' => 'string',
        'convert' => 'string',
        'convert_cost' => 'string',
        'convert_rate' => 'string',
        'deep_convert' => 'string',
        'deep_convert_cost' => 'string',
        'deep_convert_rate' => 'string',
        'phone' => 'string',
        'form' => 'string',
        'map_search' => 'string',
        'button' => 'string',
        'view' => 'string',
        'download' => 'string',
        'qq' => 'string',
        'lottery' => 'string',
        'vote' => 'string',
        'message' => 'string',
        'shopping' => 'string',
        'redirect' => 'string',
        'consult' => 'string',
        'wechat' => 'string',
        'phone_confirm' => 'string',
        'phone_connect' => 'string',
        'consult_effective' => 'string',
        'coupon' => 'string',
        'coupon_single_page' => 'string',
        'redirect_to_shop' => 'string',
        'poi_collect' => 'string',
        'poi_address_click' => 'string',
        'total_play' => 'string',
        'valid_play' => 'string',
        'valid_play_cost' => 'string',
        'valid_play_rate' => 'string',
        'play_over_rate' => 'string',
        'play_duration_sum' => 'string',
        'share' => 'string',
        'comment' => 'string',
        'like' => 'string',
        'follow' => 'string',
        'home_visited' => 'string',
        'location_click' => 'string',
        'message_action' => 'string',
        'click_landing_page' => 'string',
        'click_shopwindow' => 'string',
        'click_website' => 'string',
        'click_download' => 'string',
        'click_call_dy' => 'string',
        'stat_pay_amount' => 'string',
        'pay_amount_roi' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'advertiser_id' => 'int64',
        'stat_datetime' => null,
        'cost' => null,
        'show' => null,
        'avg_show_cost' => null,
        'click' => null,
        'avg_click_cost' => null,
        'ctr' => null,
        'convert' => null,
        'convert_cost' => null,
        'convert_rate' => null,
        'deep_convert' => null,
        'deep_convert_cost' => null,
        'deep_convert_rate' => null,
        'phone' => null,
        'form' => null,
        'map_search' => null,
        'button' => null,
        'view' => null,
        'download' => null,
        'qq' => null,
        'lottery' => null,
        'vote' => null,
        'message' => null,
        'shopping' => null,
        'redirect' => null,
        'consult' => null,
        'wechat' => null,
        'phone_confirm' => null,
        'phone_connect' => null,
        'consult_effective' => null,
        'coupon' => null,
        'coupon_single_page' => null,
        'redirect_to_shop' => null,
        'poi_collect' => null,
        'poi_address_click' => null,
        'total_play' => null,
        'valid_play' => null,
        'valid_play_cost' => null,
        'valid_play_rate' => null,
        'play_over_rate' => null,
        'play_duration_sum' => null,
        'share' => null,
        'comment' => null,
        'like' => null,
        'follow' => null,
        'home_visited' => null,
        'location_click' => null,
        'message_action' => null,
        'click_landing_page' => null,
        'click_shopwindow' => null,
        'click_website' => null,
        'click_download' => null,
        'click_call_dy' => null,
        'stat_pay_amount' => null,
        'pay_amount_roi' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'advertiser_id' => 'advertiser_id',
        'stat_datetime' => 'stat_datetime',
        'cost' => 'cost',
        'show' => 'show',
        'avg_show_cost' => 'avg_show_cost',
        'click' => 'click',
        'avg_click_cost' => 'avg_click_cost',
        'ctr' => 'ctr',
        'convert' => 'convert',
        'convert_cost' => 'convert_cost',
        'convert_rate' => 'convert_rate',
        'deep_convert' => 'deep_convert',
        'deep_convert_cost' => 'deep_convert_cost',
        'deep_convert_rate' => 'deep_convert_rate',
        'phone' => 'phone',
        'form' => 'form',
        'map_search' => 'map_search',
        'button' => 'button',
        'view' => 'view',
        'download' => 'download',
        'qq' => 'qq',
        'lottery' => 'lottery',
        'vote' => 'vote',
        'message' => 'message',
        'shopping' => 'shopping',
        'redirect' => 'redirect',
        'consult' => 'consult',
        'wechat' => 'wechat',
        'phone_confirm' => 'phone_confirm',
        'phone_connect' => 'phone_connect',
        'consult_effective' => 'consult_effective',
        'coupon' => 'coupon',
        'coupon_single_page' => 'coupon_single_page',
        'redirect_to_shop' => 'redirect_to_shop',
        'poi_collect' => 'poi_collect',
        'poi_address_click' => 'poi_address_click',
        'total_play' => 'total_play',
        'valid_play' => 'valid_play',
        'valid_play_cost' => 'valid_play_cost',
        'valid_play_rate' => 'valid_play_rate',
        'play_over_rate' => 'play_over_rate',
        'play_duration_sum' => 'play_duration_sum',
        'share' => 'share',
        'comment' => 'comment',
        'like' => 'like',
        'follow' => 'follow',
        'home_visited' => 'home_visited',
        'location_click' => 'location_click',
        'message_action' => 'message_action',
        'click_landing_page' => 'click_landing_page',
        'click_shopwindow' => 'click_shopwindow',
        'click_website' => 'click_website',
        'click_download' => 'click_download',
        'click_call_dy' => 'click_call_dy',
        'stat_pay_amount' => 'stat_pay_amount',
        'pay_amount_roi' => 'pay_amount_roi'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'advertiser_id' => 'setAdvertiserId',
        'stat_datetime' => 'setStatDatetime',
        'cost' => 'setCost',
        'show' => 'setShow',
        'avg_show_cost' => 'setAvgShowCost',
        'click' => 'setClick',
        'avg_click_cost' => 'setAvgClickCost',
        'ctr' => 'setCtr',
        'convert' => 'setConvert',
        'convert_cost' => 'setConvertCost',
        'convert_rate' => 'setConvertRate',
        'deep_convert' => 'setDeepConvert',
        'deep_convert_cost' => 'setDeepConvertCost',
        'deep_convert_rate' => 'setDeepConvertRate',
        'phone' => 'setPhone',
        'form' => 'setForm',
        'map_search' => 'setMapSearch',
        'button' => 'setButton',
        'view' => 'setView',
        'download' => 'setDownload',
        'qq' => 'setQq',
        'lottery' => 'setLottery',
        'vote' => 'setVote',
        'message' => 'setMessage',
        'shopping' => 'setShopping',
        'redirect' => 'setRedirect',
        'consult' => 'setConsult',
        'wechat' => 'setWechat',
        'phone_confirm' => 'setPhoneConfirm',
        'phone_connect' => 'setPhoneConnect',
        'consult_effective' => 'setConsultEffective',
        'coupon' => 'setCoupon',
        'coupon_single_page' => 'setCouponSinglePage',
        'redirect_to_shop' => 'setRedirectToShop',
        'poi_collect' => 'setPoiCollect',
        'poi_address_click' => 'setPoiAddressClick',
        'total_play' => 'setTotalPlay',
        'valid_play' => 'setValidPlay',
        'valid_play_cost' => 'setValidPlayCost',
        'valid_play_rate' => 'setValidPlayRate',
        'play_over_rate' => 'setPlayOverRate',
        'play_duration_sum' => 'setPlayDurationSum',
        'share' => 'setShare',
        'comment' => 'setComment',
        'like' => 'setLike',
        'follow' => 'setFollow',
        'home_visited' => 'setHomeVisited',
        'location_click' => 'setLocationClick',
        'message_action' => 'setMessageAction',
        'click_landing_page' => 'setClickLandingPage',
        'click_shopwindow' => 'setClickShopwindow',
        'click_website' => 'setClickWebsite',
        'click_download' => 'setClickDownload',
        'click_call_dy' => 'setClickCallDy',
        'stat_pay_amount' => 'setStatPayAmount',
        'pay_amount_roi' => 'setPayAmountRoi'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'advertiser_id' => 'getAdvertiserId',
        'stat_datetime' => 'getStatDatetime',
        'cost' => 'getCost',
        'show' => 'getShow',
        'avg_show_cost' => 'getAvgShowCost',
        'click' => 'getClick',
        'avg_click_cost' => 'getAvgClickCost',
        'ctr' => 'getCtr',
        'convert' => 'getConvert',
        'convert_cost' => 'getConvertCost',
        'convert_rate' => 'getConvertRate',
        'deep_convert' => 'getDeepConvert',
        'deep_convert_cost' => 'getDeepConvertCost',
        'deep_convert_rate' => 'getDeepConvertRate',
        'phone' => 'getPhone',
        'form' => 'getForm',
        'map_search' => 'getMapSearch',
        'button' => 'getButton',
        'view' => 'getView',
        'download' => 'getDownload',
        'qq' => 'getQq',
        'lottery' => 'getLottery',
        'vote' => 'getVote',
        'message' => 'getMessage',
        'shopping' => 'getShopping',
        'redirect' => 'getRedirect',
        'consult' => 'getConsult',
        'wechat' => 'getWechat',
        'phone_confirm' => 'getPhoneConfirm',
        'phone_connect' => 'getPhoneConnect',
        'consult_effective' => 'getConsultEffective',
        'coupon' => 'getCoupon',
        'coupon_single_page' => 'getCouponSinglePage',
        'redirect_to_shop' => 'getRedirectToShop',
        'poi_collect' => 'getPoiCollect',
        'poi_address_click' => 'getPoiAddressClick',
        'total_play' => 'getTotalPlay',
        'valid_play' => 'getValidPlay',
        'valid_play_cost' => 'getValidPlayCost',
        'valid_play_rate' => 'getValidPlayRate',
        'play_over_rate' => 'getPlayOverRate',
        'play_duration_sum' => 'getPlayDurationSum',
        'share' => 'getShare',
        'comment' => 'getComment',
        'like' => 'getLike',
        'follow' => 'getFollow',
        'home_visited' => 'getHomeVisited',
        'location_click' => 'getLocationClick',
        'message_action' => 'getMessageAction',
        'click_landing_page' => 'getClickLandingPage',
        'click_shopwindow' => 'getClickShopwindow',
        'click_website' => 'getClickWebsite',
        'click_download' => 'getClickDownload',
        'click_call_dy' => 'getClickCallDy',
        'stat_pay_amount' => 'getStatPayAmount',
        'pay_amount_roi' => 'getPayAmountRoi'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['advertiser_id'] = isset($data['advertiser_id']) ? $data['advertiser_id'] : null;
        $this->container['stat_datetime'] = isset($data['stat_datetime']) ? $data['stat_datetime'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['show'] = isset($data['show']) ? $data['show'] : null;
        $this->container['avg_show_cost'] = isset($data['avg_show_cost']) ? $data['avg_show_cost'] : null;
        $this->container['click'] = isset($data['click']) ? $data['click'] : null;
        $this->container['avg_click_cost'] = isset($data['avg_click_cost']) ? $data['avg_click_cost'] : null;
        $this->container['ctr'] = isset($data['ctr']) ? $data['ctr'] : null;
        $this->container['convert'] = isset($data['convert']) ? $data['convert'] : null;
        $this->container['convert_cost'] = isset($data['convert_cost']) ? $data['convert_cost'] : null;
        $this->container['convert_rate'] = isset($data['convert_rate']) ? $data['convert_rate'] : null;
        $this->container['deep_convert'] = isset($data['deep_convert']) ? $data['deep_convert'] : null;
        $this->container['deep_convert_cost'] = isset($data['deep_convert_cost']) ? $data['deep_convert_cost'] : null;
        $this->container['deep_convert_rate'] = isset($data['deep_convert_rate']) ? $data['deep_convert_rate'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['form'] = isset($data['form']) ? $data['form'] : null;
        $this->container['map_search'] = isset($data['map_search']) ? $data['map_search'] : null;
        $this->container['button'] = isset($data['button']) ? $data['button'] : null;
        $this->container['view'] = isset($data['view']) ? $data['view'] : null;
        $this->container['download'] = isset($data['download']) ? $data['download'] : null;
        $this->container['qq'] = isset($data['qq']) ? $data['qq'] : null;
        $this->container['lottery'] = isset($data['lottery']) ? $data['lottery'] : null;
        $this->container['vote'] = isset($data['vote']) ? $data['vote'] : null;
        $this->container['message'] = isset($data['message']) ? $data['message'] : null;
        $this->container['shopping'] = isset($data['shopping']) ? $data['shopping'] : null;
        $this->container['redirect'] = isset($data['redirect']) ? $data['redirect'] : null;
        $this->container['consult'] = isset($data['consult']) ? $data['consult'] : null;
        $this->container['wechat'] = isset($data['wechat']) ? $data['wechat'] : null;
        $this->container['phone_confirm'] = isset($data['phone_confirm']) ? $data['phone_confirm'] : null;
        $this->container['phone_connect'] = isset($data['phone_connect']) ? $data['phone_connect'] : null;
        $this->container['consult_effective'] = isset($data['consult_effective']) ? $data['consult_effective'] : null;
        $this->container['coupon'] = isset($data['coupon']) ? $data['coupon'] : null;
        $this->container['coupon_single_page'] = isset($data['coupon_single_page']) ? $data['coupon_single_page'] : null;
        $this->container['redirect_to_shop'] = isset($data['redirect_to_shop']) ? $data['redirect_to_shop'] : null;
        $this->container['poi_collect'] = isset($data['poi_collect']) ? $data['poi_collect'] : null;
        $this->container['poi_address_click'] = isset($data['poi_address_click']) ? $data['poi_address_click'] : null;
        $this->container['total_play'] = isset($data['total_play']) ? $data['total_play'] : null;
        $this->container['valid_play'] = isset($data['valid_play']) ? $data['valid_play'] : null;
        $this->container['valid_play_cost'] = isset($data['valid_play_cost']) ? $data['valid_play_cost'] : null;
        $this->container['valid_play_rate'] = isset($data['valid_play_rate']) ? $data['valid_play_rate'] : null;
        $this->container['play_over_rate'] = isset($data['play_over_rate']) ? $data['play_over_rate'] : null;
        $this->container['play_duration_sum'] = isset($data['play_duration_sum']) ? $data['play_duration_sum'] : null;
        $this->container['share'] = isset($data['share']) ? $data['share'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['like'] = isset($data['like']) ? $data['like'] : null;
        $this->container['follow'] = isset($data['follow']) ? $data['follow'] : null;
        $this->container['home_visited'] = isset($data['home_visited']) ? $data['home_visited'] : null;
        $this->container['location_click'] = isset($data['location_click']) ? $data['location_click'] : null;
        $this->container['message_action'] = isset($data['message_action']) ? $data['message_action'] : null;
        $this->container['click_landing_page'] = isset($data['click_landing_page']) ? $data['click_landing_page'] : null;
        $this->container['click_shopwindow'] = isset($data['click_shopwindow']) ? $data['click_shopwindow'] : null;
        $this->container['click_website'] = isset($data['click_website']) ? $data['click_website'] : null;
        $this->container['click_download'] = isset($data['click_download']) ? $data['click_download'] : null;
        $this->container['click_call_dy'] = isset($data['click_call_dy']) ? $data['click_call_dy'] : null;
        $this->container['stat_pay_amount'] = isset($data['stat_pay_amount']) ? $data['stat_pay_amount'] : null;
        $this->container['pay_amount_roi'] = isset($data['pay_amount_roi']) ? $data['pay_amount_roi'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets advertiser_id
     *
     * @return int|null
     */
    public function getAdvertiserId()
    {
        return $this->container['advertiser_id'];
    }

    /**
     * Sets advertiser_id
     *
     * @param int|null $advertiser_id 广告主ID
     *
     * @return $this
     */
    public function setAdvertiserId($advertiser_id)
    {
        $this->container['advertiser_id'] = $advertiser_id;

        return $this;
    }

    /**
     * Gets stat_datetime
     *
     * @return string|null
     */
    public function getStatDatetime()
    {
        return $this->container['stat_datetime'];
    }

    /**
     * Sets stat_datetime
     *
     * @param string|null $stat_datetime 起始时间，日期或者时间
     *
     * @return $this
     */
    public function setStatDatetime($stat_datetime)
    {
        $this->container['stat_datetime'] = $stat_datetime;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return float|null
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param float|null $cost 总花费
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets show
     *
     * @return string|null
     */
    public function getShow()
    {
        return $this->container['show'];
    }

    /**
     * Sets show
     *
     * @param string|null $show 展示数
     *
     * @return $this
     */
    public function setShow($show)
    {
        $this->container['show'] = $show;

        return $this;
    }

    /**
     * Gets avg_show_cost
     *
     * @return string|null
     */
    public function getAvgShowCost()
    {
        return $this->container['avg_show_cost'];
    }

    /**
     * Sets avg_show_cost
     *
     * @param string|null $avg_show_cost 平均千次展现费用
     *
     * @return $this
     */
    public function setAvgShowCost($avg_show_cost)
    {
        $this->container['avg_show_cost'] = $avg_show_cost;

        return $this;
    }

    /**
     * Gets click
     *
     * @return string|null
     */
    public function getClick()
    {
        return $this->container['click'];
    }

    /**
     * Sets click
     *
     * @param string|null $click 点击数
     *
     * @return $this
     */
    public function setClick($click)
    {
        $this->container['click'] = $click;

        return $this;
    }

    /**
     * Gets avg_click_cost
     *
     * @return string|null
     */
    public function getAvgClickCost()
    {
        return $this->container['avg_click_cost'];
    }

    /**
     * Sets avg_click_cost
     *
     * @param string|null $avg_click_cost 平均点击单价
     *
     * @return $this
     */
    public function setAvgClickCost($avg_click_cost)
    {
        $this->container['avg_click_cost'] = $avg_click_cost;

        return $this;
    }

    /**
     * Gets ctr
     *
     * @return string|null
     */
    public function getCtr()
    {
        return $this->container['ctr'];
    }

    /**
     * Sets ctr
     *
     * @param string|null $ctr 点击率
     *
     * @return $this
     */
    public function setCtr($ctr)
    {
        $this->container['ctr'] = $ctr;

        return $this;
    }

    /**
     * Gets convert
     *
     * @return string|null
     */
    public function getConvert()
    {
        return $this->container['convert'];
    }

    /**
     * Sets convert
     *
     * @param string|null $convert 转化数
     *
     * @return $this
     */
    public function setConvert($convert)
    {
        $this->container['convert'] = $convert;

        return $this;
    }

    /**
     * Gets convert_cost
     *
     * @return string|null
     */
    public function getConvertCost()
    {
        return $this->container['convert_cost'];
    }

    /**
     * Sets convert_cost
     *
     * @param string|null $convert_cost 转化成本
     *
     * @return $this
     */
    public function setConvertCost($convert_cost)
    {
        $this->container['convert_cost'] = $convert_cost;

        return $this;
    }

    /**
     * Gets convert_rate
     *
     * @return string|null
     */
    public function getConvertRate()
    {
        return $this->container['convert_rate'];
    }

    /**
     * Sets convert_rate
     *
     * @param string|null $convert_rate 转化率
     *
     * @return $this
     */
    public function setConvertRate($convert_rate)
    {
        $this->container['convert_rate'] = $convert_rate;

        return $this;
    }

    /**
     * Gets deep_convert
     *
     * @return string|null
     */
    public function getDeepConvert()
    {
        return $this->container['deep_convert'];
    }

    /**
     * Sets deep_convert
     *
     * @param string|null $deep_convert 深度转化数
     *
     * @return $this
     */
    public function setDeepConvert($deep_convert)
    {
        $this->container['deep_convert'] = $deep_convert;

        return $this;
    }

    /**
     * Gets deep_convert_cost
     *
     * @return string|null
     */
    public function getDeepConvertCost()
    {
        return $this->container['deep_convert_cost'];
    }

    /**
     * Sets deep_convert_cost
     *
     * @param string|null $deep_convert_cost 深度转化成本
     *
     * @return $this
     */
    public function setDeepConvertCost($deep_convert_cost)
    {
        $this->container['deep_convert_cost'] = $deep_convert_cost;

        return $this;
    }

    /**
     * Gets deep_convert_rate
     *
     * @return string|null
     */
    public function getDeepConvertRate()
    {
        return $this->container['deep_convert_rate'];
    }

    /**
     * Sets deep_convert_rate
     *
     * @param string|null $deep_convert_rate 深度转化成本
     *
     * @return $this
     */
    public function setDeepConvertRate($deep_convert_rate)
    {
        $this->container['deep_convert_rate'] = $deep_convert_rate;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string|null
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string|null $phone 点击电话按钮
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets form
     *
     * @return string|null
     */
    public function getForm()
    {
        return $this->container['form'];
    }

    /**
     * Sets form
     *
     * @param string|null $form 表单提交
     *
     * @return $this
     */
    public function setForm($form)
    {
        $this->container['form'] = $form;

        return $this;
    }

    /**
     * Gets map_search
     *
     * @return string|null
     */
    public function getMapSearch()
    {
        return $this->container['map_search'];
    }

    /**
     * Sets map_search
     *
     * @param string|null $map_search 地图搜索
     *
     * @return $this
     */
    public function setMapSearch($map_search)
    {
        $this->container['map_search'] = $map_search;

        return $this;
    }

    /**
     * Gets button
     *
     * @return string|null
     */
    public function getButton()
    {
        return $this->container['button'];
    }

    /**
     * Sets button
     *
     * @param string|null $button 按钮点击
     *
     * @return $this
     */
    public function setButton($button)
    {
        $this->container['button'] = $button;

        return $this;
    }

    /**
     * Gets view
     *
     * @return string|null
     */
    public function getView()
    {
        return $this->container['view'];
    }

    /**
     * Sets view
     *
     * @param string|null $view 关键页面浏览
     *
     * @return $this
     */
    public function setView($view)
    {
        $this->container['view'] = $view;

        return $this;
    }

    /**
     * Gets download
     *
     * @return string|null
     */
    public function getDownload()
    {
        return $this->container['download'];
    }

    /**
     * Sets download
     *
     * @param string|null $download 下载开始
     *
     * @return $this
     */
    public function setDownload($download)
    {
        $this->container['download'] = $download;

        return $this;
    }

    /**
     * Gets qq
     *
     * @return string|null
     */
    public function getQq()
    {
        return $this->container['qq'];
    }

    /**
     * Sets qq
     *
     * @param string|null $qq QQ咨询
     *
     * @return $this
     */
    public function setQq($qq)
    {
        $this->container['qq'] = $qq;

        return $this;
    }

    /**
     * Gets lottery
     *
     * @return string|null
     */
    public function getLottery()
    {
        return $this->container['lottery'];
    }

    /**
     * Sets lottery
     *
     * @param string|null $lottery 抽奖
     *
     * @return $this
     */
    public function setLottery($lottery)
    {
        $this->container['lottery'] = $lottery;

        return $this;
    }

    /**
     * Gets vote
     *
     * @return string|null
     */
    public function getVote()
    {
        return $this->container['vote'];
    }

    /**
     * Sets vote
     *
     * @param string|null $vote 投票
     *
     * @return $this
     */
    public function setVote($vote)
    {
        $this->container['vote'] = $vote;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string|null
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string|null $message 短信咨询
     *
     * @return $this
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets shopping
     *
     * @return string|null
     */
    public function getShopping()
    {
        return $this->container['shopping'];
    }

    /**
     * Sets shopping
     *
     * @param string|null $shopping 商品购买
     *
     * @return $this
     */
    public function setShopping($shopping)
    {
        $this->container['shopping'] = $shopping;

        return $this;
    }

    /**
     * Gets redirect
     *
     * @return string|null
     */
    public function getRedirect()
    {
        return $this->container['redirect'];
    }

    /**
     * Sets redirect
     *
     * @param string|null $redirect 页面跳转
     *
     * @return $this
     */
    public function setRedirect($redirect)
    {
        $this->container['redirect'] = $redirect;

        return $this;
    }

    /**
     * Gets consult
     *
     * @return string|null
     */
    public function getConsult()
    {
        return $this->container['consult'];
    }

    /**
     * Sets consult
     *
     * @param string|null $consult 在线咨询
     *
     * @return $this
     */
    public function setConsult($consult)
    {
        $this->container['consult'] = $consult;

        return $this;
    }

    /**
     * Gets wechat
     *
     * @return string|null
     */
    public function getWechat()
    {
        return $this->container['wechat'];
    }

    /**
     * Sets wechat
     *
     * @param string|null $wechat 微信复制
     *
     * @return $this
     */
    public function setWechat($wechat)
    {
        $this->container['wechat'] = $wechat;

        return $this;
    }

    /**
     * Gets phone_confirm
     *
     * @return string|null
     */
    public function getPhoneConfirm()
    {
        return $this->container['phone_confirm'];
    }

    /**
     * Sets phone_confirm
     *
     * @param string|null $phone_confirm 智能电话-确认拨打
     *
     * @return $this
     */
    public function setPhoneConfirm($phone_confirm)
    {
        $this->container['phone_confirm'] = $phone_confirm;

        return $this;
    }

    /**
     * Gets phone_connect
     *
     * @return string|null
     */
    public function getPhoneConnect()
    {
        return $this->container['phone_connect'];
    }

    /**
     * Sets phone_connect
     *
     * @param string|null $phone_connect 智能电话-确认接通
     *
     * @return $this
     */
    public function setPhoneConnect($phone_connect)
    {
        $this->container['phone_connect'] = $phone_connect;

        return $this;
    }

    /**
     * Gets consult_effective
     *
     * @return string|null
     */
    public function getConsultEffective()
    {
        return $this->container['consult_effective'];
    }

    /**
     * Sets consult_effective
     *
     * @param string|null $consult_effective 有效咨询
     *
     * @return $this
     */
    public function setConsultEffective($consult_effective)
    {
        $this->container['consult_effective'] = $consult_effective;

        return $this;
    }

    /**
     * Gets coupon
     *
     * @return string|null
     */
    public function getCoupon()
    {
        return $this->container['coupon'];
    }

    /**
     * Sets coupon
     *
     * @param string|null $coupon 建站卡券领取
     *
     * @return $this
     */
    public function setCoupon($coupon)
    {
        $this->container['coupon'] = $coupon;

        return $this;
    }

    /**
     * Gets coupon_single_page
     *
     * @return string|null
     */
    public function getCouponSinglePage()
    {
        return $this->container['coupon_single_page'];
    }

    /**
     * Sets coupon_single_page
     *
     * @param string|null $coupon_single_page 卡券页领取
     *
     * @return $this
     */
    public function setCouponSinglePage($coupon_single_page)
    {
        $this->container['coupon_single_page'] = $coupon_single_page;

        return $this;
    }

    /**
     * Gets redirect_to_shop
     *
     * @return string|null
     */
    public function getRedirectToShop()
    {
        return $this->container['redirect_to_shop'];
    }

    /**
     * Sets redirect_to_shop
     *
     * @param string|null $redirect_to_shop 调起店铺
     *
     * @return $this
     */
    public function setRedirectToShop($redirect_to_shop)
    {
        $this->container['redirect_to_shop'] = $redirect_to_shop;

        return $this;
    }

    /**
     * Gets poi_collect
     *
     * @return string|null
     */
    public function getPoiCollect()
    {
        return $this->container['poi_collect'];
    }

    /**
     * Sets poi_collect
     *
     * @param string|null $poi_collect 店铺收藏
     *
     * @return $this
     */
    public function setPoiCollect($poi_collect)
    {
        $this->container['poi_collect'] = $poi_collect;

        return $this;
    }

    /**
     * Gets poi_address_click
     *
     * @return string|null
     */
    public function getPoiAddressClick()
    {
        return $this->container['poi_address_click'];
    }

    /**
     * Sets poi_address_click
     *
     * @param string|null $poi_address_click 查看店铺地址
     *
     * @return $this
     */
    public function setPoiAddressClick($poi_address_click)
    {
        $this->container['poi_address_click'] = $poi_address_click;

        return $this;
    }

    /**
     * Gets total_play
     *
     * @return string|null
     */
    public function getTotalPlay()
    {
        return $this->container['total_play'];
    }

    /**
     * Sets total_play
     *
     * @param string|null $total_play 播放数
     *
     * @return $this
     */
    public function setTotalPlay($total_play)
    {
        $this->container['total_play'] = $total_play;

        return $this;
    }

    /**
     * Gets valid_play
     *
     * @return string|null
     */
    public function getValidPlay()
    {
        return $this->container['valid_play'];
    }

    /**
     * Sets valid_play
     *
     * @param string|null $valid_play 有效播放数
     *
     * @return $this
     */
    public function setValidPlay($valid_play)
    {
        $this->container['valid_play'] = $valid_play;

        return $this;
    }

    /**
     * Gets valid_play_cost
     *
     * @return string|null
     */
    public function getValidPlayCost()
    {
        return $this->container['valid_play_cost'];
    }

    /**
     * Sets valid_play_cost
     *
     * @param string|null $valid_play_cost 有效播放成本
     *
     * @return $this
     */
    public function setValidPlayCost($valid_play_cost)
    {
        $this->container['valid_play_cost'] = $valid_play_cost;

        return $this;
    }

    /**
     * Gets valid_play_rate
     *
     * @return string|null
     */
    public function getValidPlayRate()
    {
        return $this->container['valid_play_rate'];
    }

    /**
     * Sets valid_play_rate
     *
     * @param string|null $valid_play_rate 有效播放率
     *
     * @return $this
     */
    public function setValidPlayRate($valid_play_rate)
    {
        $this->container['valid_play_rate'] = $valid_play_rate;

        return $this;
    }

    /**
     * Gets play_over_rate
     *
     * @return string|null
     */
    public function getPlayOverRate()
    {
        return $this->container['play_over_rate'];
    }

    /**
     * Sets play_over_rate
     *
     * @param string|null $play_over_rate 播完率
     *
     * @return $this
     */
    public function setPlayOverRate($play_over_rate)
    {
        $this->container['play_over_rate'] = $play_over_rate;

        return $this;
    }

    /**
     * Gets play_duration_sum
     *
     * @return string|null
     */
    public function getPlayDurationSum()
    {
        return $this->container['play_duration_sum'];
    }

    /**
     * Sets play_duration_sum
     *
     * @param string|null $play_duration_sum 播放时长，单位ms
     *
     * @return $this
     */
    public function setPlayDurationSum($play_duration_sum)
    {
        $this->container['play_duration_sum'] = $play_duration_sum;

        return $this;
    }

    /**
     * Gets share
     *
     * @return string|null
     */
    public function getShare()
    {
        return $this->container['share'];
    }

    /**
     * Sets share
     *
     * @param string|null $share 分享数
     *
     * @return $this
     */
    public function setShare($share)
    {
        $this->container['share'] = $share;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string|null
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string|null $comment 评论数
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets like
     *
     * @return string|null
     */
    public function getLike()
    {
        return $this->container['like'];
    }

    /**
     * Sets like
     *
     * @param string|null $like 点赞数
     *
     * @return $this
     */
    public function setLike($like)
    {
        $this->container['like'] = $like;

        return $this;
    }

    /**
     * Gets follow
     *
     * @return string|null
     */
    public function getFollow()
    {
        return $this->container['follow'];
    }

    /**
     * Sets follow
     *
     * @param string|null $follow 新增关注数
     *
     * @return $this
     */
    public function setFollow($follow)
    {
        $this->container['follow'] = $follow;

        return $this;
    }

    /**
     * Gets home_visited
     *
     * @return string|null
     */
    public function getHomeVisited()
    {
        return $this->container['home_visited'];
    }

    /**
     * Sets home_visited
     *
     * @param string|null $home_visited 主页访问量
     *
     * @return $this
     */
    public function setHomeVisited($home_visited)
    {
        $this->container['home_visited'] = $home_visited;

        return $this;
    }

    /**
     * Gets location_click
     *
     * @return string|null
     */
    public function getLocationClick()
    {
        return $this->container['location_click'];
    }

    /**
     * Sets location_click
     *
     * @param string|null $location_click POI点击数
     *
     * @return $this
     */
    public function setLocationClick($location_click)
    {
        $this->container['location_click'] = $location_click;

        return $this;
    }

    /**
     * Gets message_action
     *
     * @return string|null
     */
    public function getMessageAction()
    {
        return $this->container['message_action'];
    }

    /**
     * Sets message_action
     *
     * @param string|null $message_action 私信数
     *
     * @return $this
     */
    public function setMessageAction($message_action)
    {
        $this->container['message_action'] = $message_action;

        return $this;
    }

    /**
     * Gets click_landing_page
     *
     * @return string|null
     */
    public function getClickLandingPage()
    {
        return $this->container['click_landing_page'];
    }

    /**
     * Sets click_landing_page
     *
     * @param string|null $click_landing_page 推广页访问量
     *
     * @return $this
     */
    public function setClickLandingPage($click_landing_page)
    {
        $this->container['click_landing_page'] = $click_landing_page;

        return $this;
    }

    /**
     * Gets click_shopwindow
     *
     * @return string|null
     */
    public function getClickShopwindow()
    {
        return $this->container['click_shopwindow'];
    }

    /**
     * Sets click_shopwindow
     *
     * @param string|null $click_shopwindow 主页商品橱窗访问量
     *
     * @return $this
     */
    public function setClickShopwindow($click_shopwindow)
    {
        $this->container['click_shopwindow'] = $click_shopwindow;

        return $this;
    }

    /**
     * Gets click_website
     *
     * @return string|null
     */
    public function getClickWebsite()
    {
        return $this->container['click_website'];
    }

    /**
     * Sets click_website
     *
     * @param string|null $click_website 主页内落地页访问量（主页官网访问量）
     *
     * @return $this
     */
    public function setClickWebsite($click_website)
    {
        $this->container['click_website'] = $click_website;

        return $this;
    }

    /**
     * Gets click_download
     *
     * @return string|null
     */
    public function getClickDownload()
    {
        return $this->container['click_download'];
    }

    /**
     * Sets click_download
     *
     * @param string|null $click_download 主页下载链接点击量
     *
     * @return $this
     */
    public function setClickDownload($click_download)
    {
        $this->container['click_download'] = $click_download;

        return $this;
    }

    /**
     * Gets click_call_dy
     *
     * @return string|null
     */
    public function getClickCallDy()
    {
        return $this->container['click_call_dy'];
    }

    /**
     * Sets click_call_dy
     *
     * @param string|null $click_call_dy 主页内电话拨打点击量
     *
     * @return $this
     */
    public function setClickCallDy($click_call_dy)
    {
        $this->container['click_call_dy'] = $click_call_dy;

        return $this;
    }

    /**
     * Gets stat_pay_amount
     *
     * @return string|null
     */
    public function getStatPayAmount()
    {
        return $this->container['stat_pay_amount'];
    }

    /**
     * Sets stat_pay_amount
     *
     * @param string|null $stat_pay_amount 付费金额（回传时间）
     *
     * @return $this
     */
    public function setStatPayAmount($stat_pay_amount)
    {
        $this->container['stat_pay_amount'] = $stat_pay_amount;

        return $this;
    }

    /**
     * Gets pay_amount_roi
     *
     * @return string|null
     */
    public function getPayAmountRoi()
    {
        return $this->container['pay_amount_roi'];
    }

    /**
     * Sets pay_amount_roi
     *
     * @param string|null $pay_amount_roi 付费ROI（回传时间）
     *
     * @return $this
     */
    public function setPayAmountRoi($pay_amount_roi)
    {
        $this->container['pay_amount_roi'] = $pay_amount_roi;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


